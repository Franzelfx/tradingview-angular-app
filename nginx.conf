user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    # HTTP to HTTPS redirection
    server {
        listen 80;
        server_name ffe-ai.com www.ffe-ai.com;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server with SSL configuration and API proxying
    # HTTPS server with SSL configuration and API proxying
    server {
        listen 443 ssl http2;
        server_name ffe-ai.de www.ffe-ai.de;

        ssl_certificate /etc/letsencrypt/live/ffe-ai.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ffe-ai.com/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/ffe-ai.com/chain.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1h;
        ssl_session_tickets off;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Root and index configuration for frontend
        root /usr/share/nginx/html;
        index index.html;

        # Serve the frontend application
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Proxy API requests to the backend service
        location /v1/ {
            proxy_pass http://backend:8000/v1/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
        }

        # TensorBoard endpoint
        location /tensorboard/ {
            proxy_pass http://tensorboard:6006/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Optional CORS settings for API accessibility
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization';
    }
}
